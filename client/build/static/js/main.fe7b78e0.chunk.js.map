{"version":3,"sources":["Components/ShowTask.jsx","Utils/Functions.js","Components/TaskList.jsx","App.js","reportWebVitals.js","index.js"],"names":["ShowTask","closeTaskModal","setState","selectedItem","show_task_modal","state","id","item","user_name","task_title","task_desc","time","nextProps","axios","get","process","headers","then","response","status","data","catch","errors","console","log","alert","event","this","target","name","value","className","Component","TaskList","showNewTaskModal","new_task_modal","newItem","closeNewTaskModal","showTaskModal","getItems","itemList","itemListStatus","messages","loading_list","undefined","length","Array","isArray","no_items","post","map","index","title","onClick","task_id","style","display","e","stopPropagation","type","placeholder","onChange","required","rows","cols","submit","disabled","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe7b78e0.chunk.js","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport { getItem } from '../Utils/Functions'\r\n\r\n\r\n\r\nclass ShowTask extends Component {\r\n\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      id: null,\r\n      item: {\r\n        user_name: '',\r\n        task_title: '',\r\n        task_desc: '',\r\n        time:''\r\n      },\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.id){\r\n      getItem(nextProps.id).then(item => {\r\n        this.setState({\r\n          id: nextProps.id,\r\n          item\r\n        })  \r\n      })\r\n    }\r\n  }\r\n\r\n  closeTaskModal = () => {\r\n    this.setState({\r\n      selectedItem: 0,\r\n      show_task_modal: false,\r\n    })\r\n  };\r\n\r\n  onChange(event) {\r\n    this.setState({[event.target.name]: event.target.value})\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {this.state.item ?\r\n          <div className=\"show-body\"> \r\n            <h2 className=\"show-task\">{this.state.item.task_title}</h2>\r\n            <p className=\"author\">by {this.state.item.user_name} at {this.state.item.time}</p>\r\n            <p className=\"desc\">{this.state.item.task_desc}</p>\r\n          </div>\r\n        : null }\r\n       </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ShowTask;\r\n","import axios from 'axios'\r\n\r\nexport const itemsList = () => {\r\n  return axios\r\n  .get(process.env.REACT_APP_API+'/', {\r\n      headers: {'Content-Type': 'application/json'}\r\n    })\r\n    .then(response => {\r\n      if (response.status === 200 && response.data !== undefined && response.data.length > 0) {\r\n        return response.data\r\n      }\r\n      return null\r\n    })\r\n    .catch((errors) => {\r\n      if (errors) console.log(errors)\r\n      alert('We have some trouble. Perhaps server is down.')\r\n      return null\r\n    })\r\n\r\n}\r\n\r\nexport const getItem = (id) => {\r\n  return axios\r\n  .get(process.env.REACT_APP_API+'/'+id, {\r\n      headers: {'Content-Type': 'application/json'}\r\n    })\r\n    .then(response => {\r\n      if (response.status === 200) {\r\n        return response.data\r\n      }\r\n      return null\r\n    })\r\n    .catch((errors) => {\r\n      if (errors) console.log(errors)\r\n      alert('We have some trouble. Perhaps server is down.')\r\n      return null\r\n    })\r\n}\r\n\r\nexport const deleteItem = (id) => {\r\n  return axios\r\n  .delete(process.env.REACT_APP_API+'/'+id, {\r\n      headers: {'Content-Type': 'application/json'}\r\n    })\r\n    .then(response => {\r\n      if (response.status === 200) {\r\n        return true\r\n      }\r\n      return null\r\n    })\r\n    .catch((errors) => {\r\n      if (errors) console.log(errors)\r\n      alert('We have some trouble. Perhaps server is down.')\r\n      return null\r\n    })\r\n}\r\n","import React, {Component, Fragment} from 'react';\r\nimport axios from 'axios'\r\nimport ShowTask from './ShowTask'\r\nimport { itemsList } from '../Utils/Functions'\r\n\r\n\r\nclass TaskList extends Component {\r\n\r\n  constructor(){\r\n    super();\r\n    this.messages = {\r\n      loading_list: ('Please wait, loading tasks...'),\r\n      no_items: 'No tasks in list.',\r\n    }\r\n    this.state = {\r\n      selectedItem: null,\r\n      itemList: [],\r\n      itemListStatus: this.messages.loading_list,\r\n      newItem: {\r\n        user_name: '',\r\n        task_title: '',\r\n        task_desc: ''\r\n      },\r\n      new_task_modal: false,\r\n      show_task_modal: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getItems()\r\n  }\r\n\r\n  showNewTaskModal = () => {\r\n    this.setState({\r\n      show_task_modal: false,\r\n      new_task_modal: true,\r\n      newItem: {\r\n        user_name: '',\r\n        task_title: '',\r\n        task_desc: ''\r\n      },\r\n    })\r\n  };\r\n\r\n  closeNewTaskModal = () => {\r\n    this.setState({\r\n      new_task_modal: false,\r\n    })\r\n  };\r\n\r\n  showTaskModal = (id) => {\r\n    this.setState({\r\n      selectedItem: id,\r\n      new_task_modal: false,\r\n      show_task_modal: true,\r\n    })\r\n  };\r\n\r\n  closeTaskModal = () => {\r\n    this.setState({\r\n      selectedItem: 0,\r\n      show_task_modal: false,\r\n    })\r\n  };\r\n\r\n  getItems = () => {\r\n    this.setState({\r\n      itemList: [],\r\n      itemListStatus: this.messages.loading_list\r\n    })\r\n    itemsList().then(data =>{\r\n      if (Array.isArray(data) && data.length > 0)        \r\n      this.setState({\r\n        itemList: [...data],\r\n        itemListStatus: ''\r\n      })\r\n      else \r\n      this.setState({\r\n        itemList: [],\r\n        itemListStatus: this.messages.no_items\r\n      })\r\n    })\r\n  }\r\n\r\n  onChange(event) {\r\n    this.setState({[event.target.name]: event.target.value})\r\n  }\r\n\r\n  submit(){\r\n    let url = process.env.REACT_APP_API+\"/\";\r\n    axios.post(url, this.state.newItem, { \r\n      headers: {'Content-Type': 'application/json'}\r\n    })\r\n    .then(response => {\r\n      if (response.status === 201) {\r\n        this.setState({itemList:[response.data, ...this.state.itemList]})\r\n      }})\r\n    .catch((errors) => {\r\n      if (errors) console.log(errors)\r\n      alert('Submit data failed. Perhaps server is down.')\r\n      this.getItems()\r\n    })\r\n    this.setState({\r\n      newItem: {\r\n        user_name: '',\r\n        task_title: '',\r\n        task_desc: ''\r\n      },\r\n      new_task_modal: false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"container\">\r\n        <div className=\"listContainer\">\r\n              {\r\n              this.state.itemList.map((item, index) => (\r\n                <div className=\"item\" title=\"click to enlarge\" key={item.task_id}>\r\n                  <div><span className=\"itemList\" onClick={() => this.showTaskModal(item.task_id)}><h2 className=\"task-link\">{item.task_title}</h2>\r\n                  <p className=\"author\">by {item.user_name} at {item.time}</p></span></div>\r\n                </div>\r\n            ))}\r\n            <div className=\"list-status\">{this.state.itemListStatus}</div>\r\n          </div>          \r\n\r\n          <div className=\"add-div\"><button className=\"add-button\" onClick={() =>this.showNewTaskModal()}>ADD NEW</button></div>\r\n\r\n          <div className=\"modal-overlay\" style={{display: this.state.new_task_modal ? 'block' : 'none'}}  onClick={() =>this.closeNewTaskModal()}>\r\n            <div className=\"modal newtask\" onClick={(e) =>e.stopPropagation()}>\r\n              <div className=\"modal-header\">\r\n                <div className=\"close\" onClick={() =>{this.closeNewTaskModal()}}>&times;</div>                 \r\n              </div>\r\n              <div className=\"modal-body\"> \r\n                <div className=\"modal-row\"><div className=\"modal-title\">Author:</div>\r\n                  <div><input type=\"text\" className=\"form-control\" id=\"user_name\" name=\"user_name\" placeholder=\"enter author name\" value={this.state.newItem.user_name} onChange={(event) => { this.setState({newItem:{...this.state.newItem, user_name: event.target.value}})}} required /></div>\r\n                </div> \r\n                <div className=\"modal-row\"><div className=\"modal-title\">Title:</div>\r\n                  <div><input type=\"text\" className=\"form-control\" id=\"task_title\" name=\"task_title\" placeholder=\"enter title\" value={this.state.newItem.task_title} onChange={(event) => { this.setState({newItem:{...this.state.newItem, task_title: event.target.value}})}} required /></div> \r\n                </div>\r\n                <div className=\"modal-row\"><div className=\"modal-title\">Description:</div>\r\n                  <div><textarea id=\"task_desc\" name=\"task_desc\" rows=\"2\" cols=\"20\"className=\"form-control\" placeholder=\"enter desc\" value={this.state.newItem.task_desc} onChange={(event) => { this.setState({newItem:{...this.state.newItem, task_desc: event.target.value}})}} required /></div> \r\n                </div>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" data-dismiss=\"modal\" onClick={()=>this.submit()}  disabled={!this.state.newItem.user_name || !this.state.newItem.task_title || !this.state.newItem.task_desc}> CREATE </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"show-overlay\" style={{display: this.state.show_task_modal ? 'block' : 'none'}} onClick={() =>this.closeTaskModal()}>\r\n            <div className=\"showtask\" onClick={(e) =>e.stopPropagation()}>\r\n                <ShowTask id = {this.state.selectedItem}/>\r\n              </div>\r\n              <div className=\"show-footer\">\r\n                <button type=\"button\" className=\"show-close\" data-dismiss=\"modal\" title=\"close window\" onClick={() =>this.closeTaskModal()}>&times;</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskList;\r\n","import './App.css';\nimport React, {Component} from 'react'\n\nimport TaskList from './Components/TaskList'\n\nclass App extends Component {\n  render() {\n\n    // const queryConfig = {\n    //     suspense: true,\n    //   }\n\n    return (\n    <div className=\"App\">\n      <TaskList/>\n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}